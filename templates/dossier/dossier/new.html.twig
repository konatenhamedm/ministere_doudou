{% block page_content %}
    {% form_theme form 'widget/fields-block.html.twig' %}
        {% from '_macros/ligne_dossiers.html.twig' import prototype_ligne_dossiers %}

    <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Création Dossier</h5>
        <div class="btn btn-icon btn-sm  ms-2" data-bs-dismiss="modal" aria-label="Close">
            <span class="svg-icon svg-icon-2x text-white">
                <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
					<rect opacity="0.5" x="6" y="17.3137" width="16" height="2" rx="1" transform="rotate(-45 6 17.3137)" fill="currentColor"></rect>
					<rect x="7.41422" y="6" width="16" height="2" rx="1" transform="rotate(45 7.41422 6)" fill="currentColor"></rect>
				</svg>
            </span>
        </div>
    </div>
    {{ form_start(form, {'attr': {'role':'form', 'class': 'form'}}) }}
    <div class="modal-body content-doc">
        {{ include('_includes/ajax/response.html.twig') }}
        <div class="row">
            <div class="col-md-4">
                {{ form_row(form.workfow) }}
            </div>
            <div class="col-md-4">
                {{ form_row(form.libelle) }}
            </div>
            <div class="col-md-4">
                {{ form_row(form.dateCreation) }}
            </div>
            <div class="col-md-12">
        
                {{ form_row(form.description) }}
        
            </div>
        
        </div>
    </div>
    {# <div class="p-8">
        {{ prototype_ligne_dossiers(form) }}
    </div> #}
    {# <div class="modal-footer">
        {# {{ include('_includes/ajax/loader.html.twig') }} 
        <button type="button" class="btn btn-default btn-sm" data-bs-dismiss="modal">Annuler</button>
        <button type="submit" class="btn btn-main btn-ajax btn-sm"><span class="spinner-border d-none  spinner-ajax spinner-border-sm" role="status" aria-hidden="true"></span> Valider</button>
    </div> #}
    {{ form_end(form) }}
{% endblock %}

{% block java %}
  <script>
      
    const $workfows = $("#exampleModalSizeSm2").find('#{{ form.workfow.vars.id }}');
    $(function () {
          $('.no-auto').each(function () {
            const $this = $(this);
            const $id = $('#' + $this.attr('id'));
            init_date_picker($id, 'down', (start, e) => {
                //$this.val(start.format('DD/MM/YYYY'));
            }, null, null, false);

            $id.on('apply.daterangepicker', function (ev, picker) {
                $(this).val(picker.startDate.format('DD/MM/YYYY'));
            });
        });
        init_select2('select');
        KTImageInput.createInstances();
        var imageInputElement = document.querySelector("#kt_image_input_control");
        var imageInput = KTImageInput.getInstance(imageInputElement);
    });
           $(function () {
                init_select2('select', null, '.content-doc');
            });

    function enMajuscule(str) {
        return str.split(/\s+/).map(s => s.charAt(0).toUpperCase() + s.substring(1).toLowerCase()).join(" ");
    }

    // $("#exampleModalSizeSm2").find('#client_prenom').on('keyup', function (event) {
    //     var $prenom = $(this);

    //     $prenom.val(enMajuscule($prenom.val()));
    // });
         $("#exampleModalSizeSm2").find('#dossier_workfow').on('keyup', function () {
                $(this).val(enMajuscule($(this).val()));
            });

    
    $(function () {


        const $container = $("#exampleModalSizeSm2").find('.proto-container');

        var index = $container.find('.row-colonne').length;


        $(document).on('select2:select', '.select-type', function (e) {
            const $this = $(this);
            let field_str = $this.find('option:selected').attr('data-require-fields');
            const $parent = $this.closest('.row-colonne');
            let fields = [];
            if (typeof field_str != 'undefined') {
                fields = field_str.split(',');
                for (let field of fields) {
                    $parent.find('.' + field).removeClass('d-none');
                }
            } else {
                $parent.find('.source,.valeurs').addClass('d-none');
            }
        });


        const $addLink = $('.add_line');
        $addLink.click(function (e) {
            const $this = $(this);
            const proto_class = $this.attr('data-protoclass');
            const name = $this.attr('data-protoname');
            const $container = $($this.attr('data-container'));



            addLine($container, name, proto_class);



            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
        });

        if (index > 0) {
            $container.children('.row-colonne').each(function () {
                const $this = $(this);
                addDeleteLink($this);
                const $select = $this.find("select");



                $select.each(function () {
                    const $this = $(this);
                    init_select2($this, null, '#exampleModalSizeSm2');
                    if ($this.hasClass('select-type')) {
                        let field_str = $this.find('option:selected').attr('data-require-fields');
                        const $parent = $this.closest('.row-colonne');
                        let fields = [];
                        if (typeof field_str != 'undefined') {
                            fields = field_str.split(',');
                            for (let field of fields) {
                                $parent.find('.' + field).removeClass('d-none');
                            }
                        } else {
                            $parent.find('.source,.valeurs').addClass('d-none');
                        }
                    }
                });

            });

        }




        // La fonction qui ajoute un formulaire Categorie
        function addLine($container, name, proto_class) {
            // Dans le contenu de l'attribut « data-prototype », on remplace :
            // - le texte "__name__label__" qu'il contient par le label du champ
            // - le texte "__name__" qu'il contient par le numéro du champ

            var $prototype = $($(proto_class).attr('data-prototype')
                .replace(new RegExp(name + 'label__', 'g'), 'Colonne ' + (index + 1))
                .replace(new RegExp(name, 'g'), index));


            init_select2($prototype.find('select'), null, '#exampleModalSizeSm2');


            // On ajoute au prototype un lien pour pouvoir supprimer la prestation
            addDeleteLink($prototype, name);
            // On ajoute le prototype modifié à la fin de la balise <div>
            $container.append($prototype);

            index++;
        }


        function addDeleteLink($prototype, name = null) {
            // Création du lien
            $deleteLink = $('<a href="#" class="btn btn-danger btn-xs"><span class="fa fa-trash"></span></a>');
            // Ajout du lien
            $prototype.find(".del-col").append($deleteLink);



            // Ajout du listener sur le clic du lien
            $deleteLink.click(function (e) {
                const $this = $(this);
                const $parent = $(this).closest('.row-colonne');
                //console.log($(this).attr('data-parent'), $(this));
                $parent.remove();

                if (index > 0) {
                    index -= 1;
                }

                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            });
        }

    })

    function load_content(url) {
        //RASS;
        const $form_content = $("#exampleModalSizeSm2").find(`#form-content`);
        //const $form_content1 = $(`#${key-1}`);

        $.ajax({
            url: url,
            method: 'GET',
            dataType: 'html',
            beforeSend: function () {

                $form_content.html(`<div class="text-center "> 
                            <strong>Chargement des données de l'étape</strong><br>
                            <div class="spinner-border ms-auto" role="status" aria-hidden="true"></div>
                        </div>`);
            },
            success: function (html) {

                $form_content.html(html);
            },

            error: function () {
                $form_content.html('<div class="text-center text-danger">Une erreur est survenue...</div>');
            }
        })
    }



    function load_principal(filters = []) {

        $.ajax({
            url: "{{ path('app_dossier_dossier_new')}}",
            method: 'GET',
            dataType: 'html',
            data: filters,
            success: function (html) {
            },

        })

    }


    $workfows.on('change', function () {
        const $this = $(this);

        const val = $(this).val();
        //console.log(val);
        
        let urlTemplate = "{{ path('app_dossier_dossier_new_load', {workfow: 'workfow'}) }}";
        let url = urlTemplate
            .replace('workfow', val);
        load_principal({ workfow: val })
        load_content(url, { workfow: val })

    });


    const urlGeneral = "{{ path('app_dossier_dossier_new_load', {workfow: 'workfow'}) }}";    
    const urlPrincipal = urlGeneral
        .replace('workfow', $workfows.val())



    load_principal({ workfow: $workfows.val() })
    load_content(urlPrincipal, { workfow: $workfows.val() })

</script>


{% endblock %}